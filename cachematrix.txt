## The functions below provide a means to cache the results of inverting a matrix.


## Wraps the provided maatrix in some function closures to enable the caching of the inverse.

makeCacheMatrix <- function(x = matrix()) {
  m <- NULL
  set <- function(y) {
    x <<- y
    m <<- NULL
  }
  get <- function() x
  setinverse <- function(mean) m <<- mean
  getinverse <- function() m
  list(set = set, get = get,
       setinverse = setinverse,
       getinverse = getinverse)
}


##This function calculates the inverse of the matrix parameter and caches the result.
##If the result has already cached, this function will return that value.

cacheSolve <- function(x, ...) {
  m <- x$getinverse()
  if(!is.null(m)) {
    message("getting cached data")
    return(m)
  }
  data <- x$get()
  m <- solve(data, ...)
  x$setinverse(m)
  m        
  ## Return a matrix that is the inverse of 'x'
}
